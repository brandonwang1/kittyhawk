---
# Source: icarus/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: "RELEASE_NAME-serve"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: "RELEASE_NAME-serve"
---
# Source: icarus/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "RELEASE_NAME-serve"
  namespace: default
  labels:
    name: "RELEASE_NAME-serve"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: "RELEASE_NAME-serve"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
  template:
    metadata:
      labels:
        name: "RELEASE_NAME-serve"
    spec:
      containers:
        - name: "worker"
          image: "pennlabs/website:123456IMAGETAG"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
---
# Source: icarus/templates/ingresses.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: RELEASE_NAME-serve
  namespace: default
spec:
  rules:
    - host: "pennlabs.org"
      http:
        paths:
          - path: "/"
            backend:
              serviceName: RELEASE_NAME-serve
              servicePort: 80
  tls:
    - hosts:
        - "pennlabs.org"
      secretName: pennlabs-org-tls
---
# Source: icarus/templates/certificates.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: pennlabs-org
  annotations:
    "helm.sh/resource-policy": keep
spec:
  secretName: pennlabs-org-tls
  dnsNames:
    - "pennlabs.org"
    - "*.pennlabs.org"
  issuerRef:
    name: wildcard-letsencrypt-prod
    kind: ClusterIssuer
    group: cert-manager.io
